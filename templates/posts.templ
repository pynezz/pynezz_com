package templates

import (
	"github.com/pynezz/pynezz_com/internal/server/middleware/models"
	"github.com/pynezz/pynezz_com/templates/layout"
)

templ Show(title string, body string, post models.Post) {
	// If no post found, show 404 and link back to home page
	if title[:3] == "404" {
		<article class="justify-center content-evenly h-full text-center items-center">
			<h1 class={ "h1", layout.Title+" pl-10" }>{ title }</h1> // Could just hard-code 404, but this is more flexible
			<p class="pb-10">{ body }</p>
			<a href={ templ.SafeURL(BaseURL) } class={ "a", layout.Link + " my-10" }>Home</a>
		</article>
	} else {
		// Else, display the post
		<article class={ "article", layout.Article }>
			<h1 class={ "h1", layout.Title }>{ title }</h1>
			<p class="date">{ post.Metadata.Date.Format("02-01-2006" ) } </p>
			<p class="tags">{ post.Metadata.Tags.String() } </p>
			@templ.Raw(post.Content.String())
		</article>
	}
}

templ PostsList(posts []models.PostMetadata) {
	<h1 class={ "h1", twTitle }>Recent Posts</h1>
	<ul>
		if len(posts) == 0 {
			<li>No posts found</li>
		} else {
			for _, p := range posts {
				<li><strong>{ p.Title } </strong>: { p.Summary } </li>
				<a href={ templ.URL("/posts/" + p.Slug) }>Read more</a>
			}
		}
	</ul>
}
