package templates

import (
	"strings"
 	"unicode/utf8"

	"github.com/pynezz/pynezz_com/templates/layout"
	"github.com/pynezz/pynezz_com/internal/server/middleware/models"
)

templ Show(title string, body string, post models.Post) {
	// <div class="flex shrink">
	// </div>
	// If no post found, show 404 and link back to home page
	if title[:3] == "404" {
		// <article class="justify-center content-evenly h-full text-center items-center">
		<article class="flex flex-col items-center justify-center text-center h-full py-10">
			<h1 class={ "h1", layout.Title+" pl-10" }>{ title }</h1> // Could just hard-code 404, but this is more flexible
			<p class="pb-10">{ body }</p>
			<a href={ templ.SafeURL(BaseURL) } class={ "a", layout.Link + " my-10" }>Home</a>
		</article>
	} else {
	// <div class="flex-1">
		// Else, display the post
		<article class={ "article", layout.Article }>
			<h1 class={ "h1", layout.Title }>{ title }</h1>
			<p class="date text-surface2 italic font-mono px-2">{ post.Metadata.Date.Format("02.01.2006") } </p>
			<div class="flex flex-wrap gap-2 mb-4">
			// <div class="flex flex-row border-b border-b-surface0 border-dotted text-sm flex-wrap">
			for _, tag := range strings.Split(string(post.Metadata.Tags), ", ") {
				if utf8.RuneCountInString(tag) > 1 {
					<a href={templ.SafeURL("/tags/" + tag[1:utf8.RuneCountInString(tag)-1])} class={"a", layout.TagBtn + " bg-crust"}>{ tag }</a>
				}
			}
			</div>
		</article>
		// <article class="flex flex-col flex-wrap bg-surface0 content-between justify-between m-2 p-2">
		// <span class="flex flex-wrap bg-mantle max-w-[960px] my-2 justify-items-start w-full p-2 rounded-md">
		<div class="bg-mantle max-w-prose w-full mb-2 mx-auto p-4 rounded-md">
			@templ.Raw(body)
		</div>
		// </article>
		// </div>
		// <div class="flex shrink">
		// </div>
	}
}

templ PostsList(posts []models.PostMetadata) {
<div class="flex flex-col items-center justify-center flex-wrap mx-auto px-2 space-x-2 space-y-2 bg-inherit">
		<h1 class={ "h1", layout.LinkCardTitle }>Posts</h1>
		<ul class={"ul", postsList}>
			if len(posts) == 0 {
				<li>No posts found</li>
			} else {
				for _, p := range posts {
					@postCard(p)
				}
			}
		</ul>
	</div>
}

templ postCard(post models.PostMetadata) {
	<div class={"div", layout.LinkCard + " w-full"}>
		<article class="flex flex-col flex-wrap text-wrap content-between justify-between m-2 p-2">
			<span class="flex flex-col flex-wrap m-2	">
				<a href={ templ.URL("/posts/" + post.Slug) }><strong class="first-letter:text-xl text-lg text-text font-semibold hover:border-b hover:border-b-sky">{ post.Title }</strong></a>
				<i class="date">{ post.CreatedAt.Format("02.01.2006") }</i>
			if post.Summary != "" {
				<i>{ post.Summary }</i>
			}	else {
				<i> no summary available.. </i>
			}
			</span>
			<span class="flex flex-row flex-wrap m-2 pb-2">
					for _, tag := range strings.Split(string(post.Tags), ", ") {
						if utf8.RuneCountInString(tag) > 1 {
							<a href={templ.SafeURL("/tags/" + tag[1:utf8.RuneCountInString(tag)-1])} class={"a", layout.TagBtn + " bg-crust"}>{ tag[1:utf8.RuneCountInString(tag)-1] }</a>
						}
					}
			</span>
		</article>
	</div>
}
